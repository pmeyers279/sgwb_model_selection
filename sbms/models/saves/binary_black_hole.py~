import numpy as np

def omega_gw_spectrum(M=8.7, lamb= 0.01,eta=0.1, zi=0.1, flow = 20, fhigh=100, df=0.25):
    """
    Parameters
    ---------
    M: 'float'
       chirp mass, in solar masses [1, 2.5]
    lamb: 'float'
       mass fraction, in solar masses [0, .1]
    eta: 'float'
       mass ratio [0, 0.25]
    zi: 'float'
       spin parameter [-0.85, 0.85]
    flow: 'float'
       low end of frequency spectrum
    fhigh: 'float'
       high end of frequency spectrum
    df: 'float'
       frequency bin width
    
     Returns                                                            
    -------                                                             
    omega_gw_f : `numpy.ndarray`                                        
        :math:`\Omega_{gw}(f)`                                          
    f : `numpy.ndarray`                                                 
        frequency array                                                
    """
    if isinstance(omg_ref, dict):
    #unpack params
    try:
        flow = float(omg_ref['flow'])
    except:
        pass
    try:
        fhigh = float(omg_ref['fhigh'])
    except:
        pass
    try:
        df = float(omg_ref['df'])
    except:
        pass
    try:
        M = float(omg_ref['M'])
    except:
        print 'WARNING: Chirp mass not set, setting to 8.7'
        pass
    try:
        lamb = float(omg_ref['lamb'])
    except:
        print 'WARNING: Mass fraction not set, setting it to 0.01'
        pass
    try:
        eta = float(omg_ref['eta'])
    except:
        print 'WARNING: Mass ratio not set, setting it to 0.1'
        pass
    try:
        zi = float(omg_ref['zi'])
    except:
        print 'WARNING: Spin Parameter not set, setting to 0.1'
        pass
        
    f = np.arange(flow, fhigh+df, df)
    omgwf = np.zeros(f.size)
